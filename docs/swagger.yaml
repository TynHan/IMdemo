basePath: /
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example APIsss
  version: "1.0"
paths:
  /index:
    get:
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - 首页
  /user/createUser:
    get:
      parameters:
      - description: User Name
        in: query
        name: name
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      - description: Password Again
        in: query
        name: repassword
        required: true
        type: string
      - description: User Phone Number
        in: query
        name: phone
        required: true
        type: string
      - description: User Email Address
        in: query
        name: email
        required: true
        type: string
      responses:
        "200":
          description: code", "message"}
          schema:
            type: string
      summary: Create User
      tags:
      - User Service
  /user/deleteUser:
    get:
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: code", "message"}
          schema:
            type: string
      summary: Delete User
      tags:
      - User Service
  /user/getlist:
    get:
      responses:
        "200":
          description: code", "message"}
          schema:
            type: string
      tags:
      - User Service
  /user/loginVal:
    get:
      parameters:
      - description: User Name
        in: query
        name: name
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      responses:
        "200":
          description: code", "message"}
          schema:
            type: string
      tags:
      - User Service
  /user/updateUser:
    get:
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      - description: User Name
        in: query
        name: name
        required: true
        type: string
      - description: User Phone Number
        in: query
        name: phone
        required: true
        type: string
      - description: User Email Address
        in: query
        name: email
        required: true
        type: string
      responses:
        "200":
          description: code", "message"}
          schema:
            type: string
      summary: Update User
      tags:
      - User Service
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
